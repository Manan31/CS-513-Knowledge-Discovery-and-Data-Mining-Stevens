# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 2
# CWID : 104530306
rm(list=ls())
#install.packages("randomForest")
library(randomForest)
ChooseFile <- file.choose()
Admission_Cat<- read.csv(ChooseFile,header = TRUE, na.strings=' ?')
View(Admission_Cat)
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 2
# CWID : 104530306
rm(list=ls())
#install.packages("randomForest")
library(randomForest)
ChooseFile <- file.choose()
Admission_Cat<- read.csv(ChooseFile,header = TRUE, na.strings=' ?')
View(Admission_Cat)
#Data Preparation
Admission_Cat <- Admission_Cat[,-1]
#View(Admission_Cat)
cols <- ncol(Admission_Cat)
cols
Admission_Cat[1:cols] <- lapply(Admission_Cat[1:cols], factor)
View(Admission_Cat)
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 2
# CWID : 104530306
rm(list=ls())
#install.packages("randomForest")
library(randomForest)
ChooseFile <- file.choose()
Admission_Cat<- read.csv(ChooseFile,header = TRUE, na.strings=' ?')
View(Admission_Cat)
#Data Preparation
Admission_Cat <- Admission_Cat[,-1]
#View(Admission_Cat)
cols <- ncol(Admission_Cat)
cols
Admission_Cat[1:cols] <- lapply(Admission_Cat[1:cols], factor)
View(Admission_Cat)
#Splitting Data
split<-sort(sample(nrow(Admission_Cat),round(.30*nrow(Admission_Cat))))
Training_Data <- Admission_Cat[-split,]
Testing_Data <- Admission_Cat[split,]
#Model
fit <- randomForest( ADMIT~., data=Training_Data, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, Testing_Data)
table(actual=Testing_Data$ADMIT,Prediction)
wrong<- (Testing_Data$Class!=Prediction )
error_rate<-sum(wrong)/length(wrong)
error_rate
tab<-table(actual=Testing_Data$ADMIT,Prediction)
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 2
# CWID : 104530306
rm(list=ls())
#install.packages("C50")
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
library(class)
library(C50)
#Data Preparation
ChooseFile <- file.choose()
Admission_Cat<- read.csv(ChooseFile,header = TRUE, na.strings='?')
data_Factor <- colnames(Admission_Cat)
Admission_Cat[data_Factor] <- lapply(Admission_Cat[data_Factor], factor)
split<-sort(sample(nrow(Admission_Cat),round(.30*nrow(Admission_Cat))))
Training_Data <- Admission_Cat[-split,]
Testing_Data <- Admission_Cat[split,]
Training_Data$ADMIT <- as.factor(Training_Data$ADMIT)
Training_Data$ADMIT <- as.factor(Training_Data$ADMIT)
model<-C5.0(ADMIT~., data = Training_Data, method = "class")
prediction_data<-predict(model,Testing_Data,type="class")
plot(model)
table(test_data$Class,prediction_data)
table(Testing_Data$ADMIT,prediction_data)
tab <- table(Testing_Data$ADMIT,prediction_data)
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 2
# CWID : 104530306
rm(list=ls())
#install.packages("randomForest")
library(randomForest)
ChooseFile <- file.choose()
Admission_Cat<- read.csv(ChooseFile,header = TRUE, na.strings=' ?')
View(Admission_Cat)
#Data Preparation
Admission_Cat <- Admission_Cat[,-1]
View(Admission_Cat)
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 2
# CWID : 104530306
rm(list=ls())
#install.packages("randomForest")
library(randomForest)
ChooseFile <- file.choose()
Admission_Cat<- read.csv(ChooseFile,header = TRUE, na.strings=' ?')
View(Admission_Cat)
#Data Preparation
Admission_Cat <- Admission_Cat[,-1]
View(Admission_Cat)
cols <- ncol(Admission_Cat)
cols
Admission_Cat[1:cols] <- lapply(Admission_Cat[1:cols], factor)
View(Admission_Cat)
#Splitting Data
split<-sort(sample(nrow(Admission_Cat),round(.30*nrow(Admission_Cat))))
Training_Data <- Admission_Cat[-split,]
Testing_Data <- Admission_Cat[split,]
#Model
fit <- randomForest( ADMIT~., data=Training_Data, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, Testing_Data)
table(actual=Testing_Data$ADMIT,Prediction)
tab<-table(actual=Testing_Data$ADMIT,Prediction)
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 3
# CWID : 104530306
rm(list=ls())
#install.packages("C50")
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
library(class)
library(C50)
#Data Preparation
ChooseFile <- file.choose()
Admission_Cat<- read.csv(ChooseFile,header = TRUE, na.strings='?')
data_Factor <- colnames(Admission_Cat)
Admission_Cat[data_Factor] <- lapply(Admission_Cat[data_Factor], factor)
#Splitting Data
split<-sort(sample(nrow(Admission_Cat),round(.30*nrow(Admission_Cat))))
Training_Data <- Admission_Cat[-split,]
Testing_Data <- Admission_Cat[split,]
Training_Data$ADMIT <- as.factor(Training_Data$ADMIT)
model<-C5.0(ADMIT~., data = Training_Data, method = "class")
prediction_data<-predict(model,Testing_Data,type="class")
plot(model)
table(Testing_Data$ADMIT,prediction_data)
tab <- table(Testing_Data$A,prediction_data)
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
tab <- table(Testing_Data$ADMIT,prediction_data)
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 3
# CWID : 104530306
rm(list=ls())
#install.packages("C50")
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
library(class)
library(C50)
#Data Preparation
ChooseFile <- file.choose()
Admission_Cat<- read.csv(ChooseFile,header = TRUE, na.strings='?')
Admission_Cat <- Admission_Cat[,-1]
data_Factor <- colnames(Admission_Cat)
Admission_Cat[data_Factor] <- lapply(Admission_Cat[data_Factor], factor)
split<-sort(sample(nrow(Admission_Cat),round(.30*nrow(Admission_Cat))))
Training_Data <- Admission_Cat[-split,]
Testing_Data <- Admission_Cat[split,]
Training_Data$ADMIT <- as.factor(Training_Data$ADMIT)
model<-C5.0(ADMIT~., data = Training_Data, method = "class")
prediction_data<-predict(model,Testing_Data,type="class")
plot(model)
table(Testing_Data$ADMIT,prediction_data)
tab <- table(Testing_Data$ADMIT,prediction_data)
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(tab)
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 1
# CWID : 104530306
ChooseFile <- file.choose()
Admission<- read.csv(ChooseFile,header = TRUE, na.strings='?')
Admission<-Admission[-1]
Admission<-na.omit(Admission)#Remove any row with a missing value in any of the columns.
Admission<-Admission[1]
View(Admission)
#Heirarchical Clustering
Admission_First_Two<- Admission[c(2,3)]
hclust<-dist(Admission_First_Two)
hclust_results<-hclust(hclust)
plot(hclust_results)
hclust_2<-cutree(hclust_results,2)
View(hclust_2)
table(hclust_2,t(admission_file_pred))
plotcluster(Admission_First_Two,hclust_2)
#K- means Clustering
admission_file1<-read.csv(data_file,na.strings = ' ?')
admission_file1<-admission_file1[,-1]
admission_file1<-admission_file1[c(2,3)]
kmeans_2<- kmeans(admission_file1,2,nstart = 10)
kmeans_pred <- kmeans_2$cluster
table(kmeans_pred,admission_file1[,1])
plotcluster(admission_file1,kmeans_pred)
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 1
# CWID : 104530306
ChooseFile <- file.choose()
Admission<- read.csv(ChooseFile,header = TRUE, na.strings='?')
Admission<-Admission[-1]
Admission<-na.omit(Admission)
Admission<-Admission[1]
View(Admission)
Admission_First_Two<- Admission[c(2,3)]
Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# Final Question 1
# CWID : 104530306
ChooseFile <- file.choose()
Admission<- read.csv(ChooseFile,header = TRUE, na.strings='?')
Admission<-Admission[-1]
Admission<-na.omit(Admission)
admission_file_pred<-Admission[1]
View(Admission)
Admission_First_Two<- Admission[c(2,3)]
hclust<-dist(Admission_First_Two)
hclust_results<-hclust(hclust)
plot(hclust_results)
hclust_2<-cutree(hclust_results,2)
View(hclust_2)
table(hclust_2,t(admission_file_pred))
plotcluster(Admission_First_Two,hclust_2)
rm(list=ls())
library(cluster)
library(fpc)
ChooseFile <- file.choose()
Admission<- read.csv(ChooseFile,header = TRUE, na.strings='?')
Admission<-Admission[-1]
Admission<-na.omit(Admission)
admission_file_pred<-Admission[1]
View(Admission)
#Heirarchical Clustering
Admission_First_Two<- Admission[c(2,3)]
hclust<-dist(Admission_First_Two)
hclust_results<-hclust(hclust)
plot(hclust_results)
hclust_2<-cutree(hclust_results,2)
View(hclust_2)
table(hclust_2,t(admission_file_pred))
plotcluster(Admission_First_Two,hclust_2)
admission_file1<-read.csv(data_file,na.strings = ' ?')
admission_file1<-admission_file1[,-1]
admission_file1<-admission_file1[c(2,3)]
kmeans_2<- kmeans(admission_file1,2,nstart = 10)
kmeans_pred <- kmeans_2$cluster
table(kmeans_pred,admission_file1[,1])
plotcluster(admission_file1,kmeans_pred)
admission_file1<-read.csv(ChooseFile,na.strings = ' ?')
admission_file1<-admission_file1[,-1]
admission_file1<-admission_file1[c(2,3)]
kmeans_2<- kmeans(admission_file1,2,nstart = 10)
kmeans_pred <- kmeans_2$cluster
table(kmeans_pred,admission_file1[,1])
plotcluster(admission_file1,kmeans_pred)
